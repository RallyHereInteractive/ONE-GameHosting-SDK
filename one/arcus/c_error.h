#pragma once

#ifdef __cplusplus
extern "C" {
#endif

// Note - when adding errors:
//    1. Never change an existing number mapping.
//    2. Add the new error symbol the string function in error.cpp.
typedef enum OneError {
    ONE_ERROR_NONE = 0,
    ONE_ERROR_TRY_AGAIN,
    ONE_ERROR_SOCKET_SYSTEM_INIT_FAIL,
    ONE_ERROR_SOCKET_SYSTEM_CLEANUP_FAIL,
    ONE_ERROR_SOCKET_CREATE_FAILED,
    ONE_ERROR_SOCKET_CLOSE_FAILED,
    ONE_ERROR_SOCKET_SEND_FAILED,
    ONE_ERROR_SOCKET_RECEIVE_FAILED,
    ONE_ERROR_SOCKET_AVAILABLE_FAILED,
    ONE_ERROR_SOCKET_BIND_FAILED,
    ONE_ERROR_SOCKET_ADDRESS_FAILED,
    ONE_ERROR_SOCKET_SOCKET_OPTIONS_FAILED,
    ONE_ERROR_SOCKET_LISTEN_FAILED,
    ONE_ERROR_SOCKET_LISTEN_NON_BLOCKING_FAILED,
    ONE_ERROR_SOCKET_ACCEPT_UNINITIALIZED,
    ONE_ERROR_SOCKET_ACCEPT_NON_BLOCKING_FAILED,
    ONE_ERROR_SOCKET_CONNECT_UNINITIALIZED,
    ONE_ERROR_SOCKET_CONNECT_FAILED,
    ONE_ERROR_SOCKET_CONNECT_NON_BLOCKING_FAILED,
    ONE_ERROR_SOCKET_SELECT_UNINITIALIZED,
    ONE_ERROR_SOCKET_SELECT_FAILED,
    ONE_ERROR_CONNECTION_UNKNOWN_STATUS,
    ONE_ERROR_CONNECTION_RECEIVE_BEFORE_SEND,
    ONE_ERROR_CONNECTION_HELLO_SEND_FAILED,
    ONE_ERROR_CONNECTION_HELLO_RECEIVE_FAILED,
    ONE_ERROR_CONNECTION_HELLO_VERSION_MISMATCH,
    ONE_ERROR_CONNECTION_HELLO_TOO_BIG,
    ONE_ERROR_CONNECTION_HELLO_INVALID,
    ONE_ERROR_CONNECTION_HELLO_MESSAGE_SEND_FAILED,
    ONE_ERROR_CONNECTION_HELLO_MESSAGE_RECEIVE_FAILED,
    ONE_ERROR_CONNECTION_HELLO_MESSAGE_HEADER_TOO_BIG,
    ONE_ERROR_CONNECTION_HELLO_MESSAGE_REPLY_INVALID,
    ONE_ERROR_CONNECTION_UPDATE_AFTER_ERROR,
    ONE_ERROR_CONNECTION_UPDATE_READY_FAIL,
    ONE_ERROR_CONNECTION_SEND_FAIL,
    ONE_ERROR_CONNECTION_RECEIVE_FAIL
} OneError;

constexpr bool is_error(OneError err) {
    return err != ONE_ERROR_NONE;
}

const char *error_text(OneError);

#ifdef __cplusplus
};
#endif
